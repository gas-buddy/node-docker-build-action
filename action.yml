name: "Build and Publish Node image to ECR"
description: "Builds and Pushes built artifacts to a container registry"

inputs:
  npm-token:
    description: "npm credentials, most useful for private repositories"
    required: true
  node-env:
    description: "The NODE_ENV value for the image, defaults to production"
    required: false
    default: production
  image-tag:
    description: "The desired tag for the Docker image"
    required: false
    default: ${{ github.run_id }}_${{ github.sha }}
  registry-name:
    description: "The name of the ECR registry repository"
    required: true
  aws-access-key-id:
    description: "AWS account id for image registry"
    required: true
  aws-secret-access-key:
    description: "AWS Secret for the access key"
    required: true
  aws-region:
    description: "AWS region for the image registry"
    required: false
    default: us-east-1
  skip-build:
    description: "Set to true if the Docker image is already built earlier in the workflow"
    required: false
    default: false

  runs:
    using: "composite"
    steps:
      - name: Build docker image ${{ inputs.registry-name }}:${{ inputs.image-tag }}
        shell: bash
        run: |
          cp ${{ github.action_path }}/Dockerfile .
          touch static
          docker build --build-arg NODE_ENV_ARG=${{ inputs.node-env }} NPM_TOKEN=${{ inputs.npm-token }} -t ${{ inputs.registry-name }}:${{ inputs.image-tag }} .
        if: ${{ inputs.skip-build != 'true' }}

      - name: Push to ECR
        id: ecr
        uses: gas-buddy/gh-ecr-push@v1.3.6
        with:
          access-key-id: ${{ inputs.aws-access-key-id }}
          secret-access-key: ${{ inputs.aws-secret-access-key }}
          region: ${{ inputs.aws-region }}
          image: ${{ inputs.registry-name }}:${{ inputs.image-tag }}